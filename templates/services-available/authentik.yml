networks:
  traefik:
    external: true

# description: identity and access management solution
# https://goauthentik.io/docs/installation/docker-compose
# https://github.com/goauthentik/authentik
# https://goauthentik.io/docs/
# https://www.postgresql.org/

services:
  postgresql:
    image: postgres
    container_name: authentik_postgresql
    restart: unless-stopped
    user: ${PUID}:${PGID}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - ./etc/authentik/postgresql:/var/lib/postgresql/data
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - POSTGRES_PASSWORD=${PG_PASS_AUTHENTIK:?database password required}
      - POSTGRES_USER=${PG_USER:-authentik}
      - POSTGRES_DB=${PG_DB:-authentik}
    labels:
      - com.centurylinklabs.watchtower.enable=${AUTHENTIK_WATCHTOWER_ENABLED:-true}
      - traefik.enable=false
      - autoheal=true

  redis:
    image: redis:alpine
    container_name: authentik_redis
    restart: unless-stopped
    volumes:
      - ./etc/authentik/redis:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    labels:
      - com.centurylinklabs.watchtower.enable=${AUTHENTIK_WATCHTOWER_ENABLED:-true}
      - traefik.enable=false
      - autoheal=true

  authentik-server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_DOCKER_TAG:-2023.5.2}
    container_name: authentik_server
    restart: unless-stopped
    networks:
      - traefik
    command: server
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - AUTHENTIK_REDIS__HOST=redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_POSTGRESQL__USER=${PG_USER:-authentik}
      - AUTHENTIK_POSTGRESQL__NAME=${PG_DB:-authentik}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${PG_PASS_AUTHENTIK}
      - AUTHENTIK_LOG_LEVEL=debug
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
      - AUTHENTIK_BOOTSTRAP_PASSWORD=${AUTHENTIK_BOOTSTRAP_PASSWORD}
      # AUTHENTIK_ERROR_REPORTING__ENABLED: "true"
      # WORKERS: 2
    user: authentik
    volumes:
      - ./etc/authentik/media:/media
      - ./etc/authentik/certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # - ./etc/authentik/geoip:/geoip
      # Uncomment above to enable the use of the geoipupdate container. This will allow more frequent updates but isn't required.
    labels:
      - joyride.host.name=${AUTHENTIK_AUTH_DOMAIN}
      - traefik.enable=true
      - traefik.http.routers.authentik.entrypoints=websecure
      - traefik.http.routers.authentik.rule=Host(`${AUTHENTIK_AUTH_DOMAIN}`) || HostRegexp(`{subdomain:[a-z]+}.${HOST_DOMAIN}`) && PathPrefix(`/outpost.goauthentik.io/`)
      - traefik.http.services.authentik.loadbalancer.server.port=9000
      - traefik.http.middlewares.authentik.forwardauth.address=http://authentik-server:9000/outpost.goauthentik.io/auth/traefik
      - traefik.http.middlewares.authentik.forwardauth.trustForwardHeader=true
      - traefik.http.middlewares.authentik.forwardauth.authResponseHeaders=X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-jwt,X-authentik-meta-jwks,X-authentik-meta-outpost,X-authentik-meta-provider,X-authentik-meta-app,X-authentik-meta-version
      - com.centurylinklabs.watchtower.enable=${AUTHENTIK_WATCHTOWER_ENABLED:-true}
      - autoheal=true

  worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_DOCKER_TAG:-2022.8.2}
    container_name: authentik_worker
    restart: unless-stopped
    command: worker
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - AUTHENTIK_REDIS__HOST=redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_POSTGRESQL__USER=${PG_USER:-authentik}
      - AUTHENTIK_POSTGRESQL__NAME=${PG_DB:-authentik}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${PG_PASS_AUTHENTIK}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
      #- AUTHENTIK_GEOIP: /tmp/geoipdisabled
      # If you uncomment above it will disable GeoIP.
      #- AUTHENTIK_ERROR_REPORTING__ENABLED: "true"
      # This is optional, and can be removed. If you remove this, the following will happen
      #- The permissions for the /media folders aren't fixed, so make sure they are 1000:1000
      #- The docker socket can't be accessed anymore
    user: authentik
    volumes:
      - ./etc/authentik/media:/media
      - ./etc/authentik/certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock
      - ./etc/authentik/custom-templates:/templates
      #- ./etc/authentik/geoip:/geoip
      # Uncomment above to enable the use of the geoipupdate container. This will allow more frequent updates but isn't required.
    labels:
      - com.centurylinklabs.watchtower.enable=${AUTHENTIK_WATCHTOWER_ENABLED:-true}
      - traefik.enable=false
      - autoheal=true

  #geoipupdate:
  #  image: maxmindinc/geoipupdate:latest
  #  volumes:
  #    - ./etc/authentik/geoip:/usr/share/GeoIP
  #  environment:
  #    - GEOIPUPDATE_EDITION_IDS=GeoLite2-City
  #    - GEOIPUPDATE_FREQUENCY=8
  #    - GEOIPUPDATE_ACCOUNT_ID=${GEOIP_ACCOUNT}
  #    - GEOIPUPDATE_LICENSE_KEY=${GEOIP_KEY}
  #  labels:
  #    - com.centurylinklabs.watchtower.enable=${AUTHENTIK_WATCHTOWER_ENABLED:-true}
  #    - traefik.enable=false
  #    - autoheal=true
  #  env_file:
  #    - .env
